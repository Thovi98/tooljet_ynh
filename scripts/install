#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

#=================================================
# BUILD THE APPLICATION
#=================================================
ynh_script_progression "Building ToolJet:"

pushd $install_dir
	ynh_script_progression "Building plugins..."

	ynh_hide_warnings ynh_exec_as_app NODE_ENV=production CYPRESS_INSTALL_BINARY=0 npm --prefix plugins install
	ynh_hide_warnings ynh_exec_as_app NODE_ENV=production CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=4096" npm --prefix plugins run build
	ynh_hide_warnings ynh_exec_as_app npm --prefix plugins prune --production

	ynh_script_progression "Building frontend..."
	ynh_hide_warnings ynh_exec_as_app CYPRESS_INSTALL_BINARY=0 npm --prefix frontend install
	ynh_hide_warnings ynh_exec_as_app CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=4096" npm --prefix frontend run build --production
	ynh_hide_warnings ynh_exec_as_app npm --prefix frontend prune --production

	ynh_script_progression "Building server..."
	ynh_hide_warnings ynh_exec_as_app NODE_ENV=production CYPRESS_INSTALL_BINARY=0 npm --prefix server install
	ynh_hide_warnings ynh_exec_as_app NODE_ENV=production CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=4096" npm --prefix server run build
	ynh_hide_warnings ynh_exec_as_app npm --prefix plugins prune --production

	ynh_script_progression "Cleanup unneeded files..."
	ynh_hide_warnings ynh_exec_as_app npm prune --production
	ynh_hide_warnings ynh_exec_as_app npm install --production --ignore-scripts
	ynh_hide_warnings ynh_exec_as_app npm cache clean --force

popd

# Cleanup after install
ynh_safe_rm "$install_dir/.cache"
ynh_safe_rm "$install_dir/.npm/cache"
ynh_safe_rm "$install_dir/node_modules"
ynh_safe_rm "$install_dir/frontend/node_modules"
ynh_safe_rm "$install_dir/frontend/assets"
ynh_safe_rm "$install_dir/docs"
ynh_safe_rm "$install_dir/.do"
ynh_safe_rm "$install_dir/.husky"
ynh_safe_rm "$install_dir/.vscode"
ynh_safe_rm "$install_dir/.hdb"
ynh_safe_rm "$install_dir/docker"
ynh_safe_rm "$install_dir/.github"
ynh_safe_rm "$install_dir/cypress-tests"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:$app "$install_dir"
chown $app:www-data -R "$install_dir/frontend/build"
chown $app:www-data "$install_dir/frontend/build"
chown $app:www-data "$install_dir/frontend"
chown $app:www-data "$install_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

# package_linter don't like `openssl` rand :(
# Use ynh_string_random and some magic stuff to get a 32 bytes hex-only string
lockbox_master_key=$(ynh_string_random --length=32 | xxd -p | head -n1 | cut -c 1-32)
ynh_app_setting_set --key=lockbox_master_key --value="$lockbox_master_key"

secret_key_base=$(ynh_string_random --length=64 | xxd -p | head -n1 | cut -c 1-64)
ynh_app_setting_set --key=secret_key_base --value="$secret_key_base"

ynh_config_add --template=".env.example" --destination="$install_dir/.env"

#=================================================
# BUILD THE DATABASE
#=================================================
ynh_script_progression "Building ToolJet database..."

pushd $install_dir
	
	# Build the database once the configuration is set
	ynh_hide_warnings ynh_exec_as_app npm run db:migrate

	# Cleanup unneeded files
	ynh_hide_warnings ynh_exec_as_app npm cache clean --force
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add $app

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
